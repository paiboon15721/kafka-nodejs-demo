{{!< default }}

<div id="customer" class="container">
  <form id="customerForm" ref="customerForm" @submit.prevent="submit" class="needs-validation"
    :class="{ 'was-validated': isValidated }" novalidate>
    <div class="form-row">
      <div class="form-group col-md-12">
        <label for="name">Name</label>
        <input type="text" class="form-control" v-model="name" id="name" required />
        <div class="invalid-feedback">
          required
        </div>
      </div>
      <div class="form-group col-md-12">
        <label for="name">Description</label>
        <input type="text" class="form-control" v-model="description" id="description" />
      </div>
    </div>
    <button type="submit" form="customerForm" class="btn btn-primary" :disabled="submitting">
      <span v-if="submitting" class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
      Submit
    </button>
  </form>
</div>
{{>failModal}}

{{#contentFor "javascript"}}
<script>
  var failModal = $('#failModal')

  var failModal = new Vue({
    el: '#failModal',
    delimiters: ['${', '}'],
    data: () => ({
      errors: {},
    }),
  })
  var customer = new Vue({
    el: '#customer',
    delimiters: ['${', '}'],
    data: () => ({
      submitting: false,
      name: '',
      description: '',
      isValidated: false,
    }),
    methods: {
      submit: function (e) {
        if (this.$refs.customerForm.checkValidity()) {
          this.submitting = true
          axios.post('/producer', { name: this.name, description: this.description }).then(res => {
            this.submitting = false
            this.name = ''
            this.description = ''
            customers.customers.push(res.data.data)
          }).catch(e => {
            this.submitting = false
            failModal.modal('show')
            failModal.errors = e.response.data
          })
        } else {
          this.$refs.customerForm.reportValidity()
        }
        this.isValidated = true
      }
    }
  })
</script>
{{/contentFor}}